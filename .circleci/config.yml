version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10

only-deploy-tags: &only-deploy-tags
  filters:
    tags:
      only: /^.*/
    branches:
      ignore: /.*/

only-deploy-master: &only-deploy-master
  filters:
    branches:
      only: master
#    branches:
#      ignore: /.*/

jobs:
  docks:
    <<: *defaults
    steps:
      - checkout
#      - run:
#          name: update-npm
#          command: sudo npm install -g npm@6
#      - restore_cache:
#          key: dependency-cache-{{ checksum "package.json" }}
#      - run:
#          name: install-npm-wee
#          command: npm install
#      - save_cache:
#          key: dependency-cache-{{ checksum "package.json" }}
#          paths:
#            - ./node_modules
#      - run:
#          name: install-packages
#          command: npm run pi
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run:
          name: build
          command: docker-compose build
#          /
#            && docker-compose push

  checkout:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update-npm
          command: sudo npm install -g npm@6
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: install-packages
          command: npm run pi
      - persist_to_workspace:
          root: ~/repo
          paths:
            .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: eslint
          command: npm run lint
  build:
    <<: *defaults
      - attach_workspace:
          - at: ~/repo
      - run:
          name: build
          command: npm run build
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: test
          command: npm run test -- -- -- --coverage
      - run:
          name: Upload Coverage Results
          command: |
            bash <(curl -s https://codecov.io/bash) \
              -n ${CIRCLE_BUILD_NUM} \
              -t ${CODECOV_TOKEN} \
              -y .codecov.yml \
#               \

  deploy_to_npm:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update-npm
          command: sudo npm install -g npm@6
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: install-packages
          command: npm run pi
      - run:
          name: build
          command: npm run build
      - run:
          name: status
          command: git status
#      - run:
#          name: coommit
#          command: git commit -m "publish from ci"
#      - run:
#          name: diff git
#          command: git diff
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/.npmrc
      - run:
          name: config email
          command: git config --global user.email "krupnik.yuri@gmail.com" /
            && git config --global user.name "yurikrupnik"
      - run:
          name: publish
          command: npx lerna publish patch --yes

#      - run:
#          name: publish
#          command: npx lerna version --yes
      # ... steps for building/testing app ...
#      - setup_remote_docker:
#          docker_layer_caching: true #
#      - run:
#          name: docker
#          command: docker-compose build


workflows:
  version: 2
  test_all:
    jobs:
      - checkout
      - lint:
          requires:
            - checkout
      - test
          requires:
            - checkout
      - build
          requires:
            - checkout
#      - docks
#      - deploy_to_npm:
#          <<: *only-deploy-tags
#          <<: *only-deploy-master
#            - build
