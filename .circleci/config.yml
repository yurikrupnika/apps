version: 2
jobs:
  lint:
    working_directory: ~/tmp
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: update-npm
          command: sudo npm install -g npm@6
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - run:
          name: lerna-bootstrap
          command: npm run bootstrap
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: eslint
          command: npm run lint
  build:
    working_directory: ~/tmp
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: update-npm
          command: sudo npm install -g npm@6
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - run:
          name: lerna-bootstrap
          command: npm run bootstrap
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: build
          command: npm run build
  test:
    working_directory: ~/tmp
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: update-npm
          command: sudo npm install -g npm@6
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - run:
          name: lerna-bootstrap
          command: npm run bootstrap
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm run test -- -- -- --coverage
      - run:
          name: Upload Coverage Results
          command: |
            bash <(curl -s https://codecov.io/bash) \
              -n ${CIRCLE_BUILD_NUM} \
              -t ${CODECOV_TOKEN} \
              -y .codecov.yml \
               \
workflows:
  version: 2
  test_all:
    jobs:
      - lint
      - build
      - test
