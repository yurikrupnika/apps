version: '3'

services:
  db:
    image: mongo
    ports:
      - 27017:27017

#  production:
#    build:
#      context: .
#      dockerfile: ./Dockerfile.production
#    environment:
#      - NODE_ENV_DOCKER=true
#      - DATABASE_URL=mongodb://db/react-boilerplate
#    container_name: fullstack-production
#    ports:
#      - 7000:7000
#    command: npm start
#    depends_on:
#      - db

#  bundles:
#    build:
#      context: .
#      dockerfile: ./Dockerfile.bundles
#    environment:
#      - NODE_ENV_DOCKER=true
#      - DATABASE_URL=mongodb://db/react-boilerplate
#    container_name: bundles-production
#    ports:
#      - 7001:80
#    command: npm start

#  coverage:
#    build:
#      context: .
#      dockerfile: ./Dockerfile.coverage
#    container_name: coverage
#    ports:
#      - 7002:80
#    command: npm start
#
#  storybook:
#    build:
#      context: .
#      dockerfile: ./Dockerfile.storybook
#    container_name: storybook-production
#    ports:
#      - 7003:80
#    command: npm start
#

#  serviceinner:
#    build:
#      dockerfile: ./packages/service1
#      context: .
#    container_name: serviceinner

  lerna:
#    image:
    build:
      context: .
      dockerfile: ./Dockerfile.lerna
    container_name: lerna

  service1:
    build:
      context: .
#      dockerfile: .
    container_name: service1
    environment:
      - NODE_ENV_DOCKER=true
      - DATABASE_URL=mongodb://db/service1-db
    ports:
      - 5001:5001
      - 5002:5002
    command: npm run start
    depends_on:
      - db

#  all-in1:
#    build:
#      context: .
##      context: ./packages/service1
#    container_name: clients-app-all
#    volumes:
#      - ./packages:/app/packages
#    environment:
#      - NODE_ENV_DOCKER=true
#      - DATABASE_URL=mongodb://db/dev-db
#    ports:
#      - 80:80
#      - 3000:3000
#      - 5001:5001
#      - 5002:5002
#      - 4000:4000
#      - 8080:8080
#      - 8081:8081
#    command: npm start
#    depends_on:
#      - db
